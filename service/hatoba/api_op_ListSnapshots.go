// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package hatoba

import (
	"context"

	"github.com/alice02/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
)

type ListSnapshotsInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s ListSnapshotsInput) String() string {
	return nifcloudutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s ListSnapshotsInput) MarshalFields(e protocol.FieldEncoder) error {
	e.SetValue(protocol.HeaderTarget, "Content-Type", protocol.StringValue("application/json"), protocol.Metadata{})

	return nil
}

type ListSnapshotsOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Snapshots []Snapshot `locationName:"snapshots" type:"list"`
}

// String returns the string representation
func (s ListSnapshotsOutput) String() string {
	return nifcloudutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s ListSnapshotsOutput) MarshalFields(e protocol.FieldEncoder) error {
	if s.RequestId != nil {
		v := *s.RequestId

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "requestId", protocol.QuotedValue{ValueMarshaler: protocol.StringValue(v)}, metadata)
	}
	if s.Snapshots != nil {
		v := s.Snapshots

		metadata := protocol.Metadata{}
		ls0 := e.List(protocol.BodyTarget, "snapshots", metadata)
		ls0.Start()
		for _, v1 := range v {
			ls0.ListAddFields(v1)
		}
		ls0.End()

	}
	return nil
}

const opListSnapshots = "ListSnapshots"

// ListSnapshotsRequest returns a request value for making API operation for
// NIFCLOUD Hatoba beta.
//
//    // Example sending a request using ListSnapshotsRequest.
//    req := client.ListSnapshotsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/hatoba-2019-03-27/ListSnapshots
func (c *Client) ListSnapshotsRequest(input *ListSnapshotsInput) ListSnapshotsRequest {
	op := &aws.Operation{
		Name:       opListSnapshots,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/snapshots",
	}

	if input == nil {
		input = &ListSnapshotsInput{}
	}

	req := c.newRequest(op, input, &ListSnapshotsOutput{})
	return ListSnapshotsRequest{Request: req, Input: input, Copy: c.ListSnapshotsRequest}
}

// ListSnapshotsRequest is the request type for the
// ListSnapshots API operation.
type ListSnapshotsRequest struct {
	*aws.Request
	Input *ListSnapshotsInput
	Copy  func(*ListSnapshotsInput) ListSnapshotsRequest
}

// Send marshals and sends the ListSnapshots API request.
func (r ListSnapshotsRequest) Send(ctx context.Context) (*ListSnapshotsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListSnapshotsResponse{
		ListSnapshotsOutput: r.Request.Data.(*ListSnapshotsOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListSnapshotsResponse is the response type for the
// ListSnapshots API operation.
type ListSnapshotsResponse struct {
	*ListSnapshotsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListSnapshots request.
func (r *ListSnapshotsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
