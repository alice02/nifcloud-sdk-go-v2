// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package hatoba

import (
	"context"

	"github.com/alice02/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
)

type DeleteNodePoolsInput struct {
	_ struct{} `type:"structure"`

	// ClusterName is a required field
	ClusterName *string `location:"uri" locationName:"ClusterName" type:"string" required:"true"`

	Names *string `location:"querystring" locationName:"names" type:"string"`
}

// String returns the string representation
func (s DeleteNodePoolsInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteNodePoolsInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DeleteNodePoolsInput"}

	if s.ClusterName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ClusterName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s DeleteNodePoolsInput) MarshalFields(e protocol.FieldEncoder) error {
	e.SetValue(protocol.HeaderTarget, "Content-Type", protocol.StringValue("application/json"), protocol.Metadata{})

	if s.ClusterName != nil {
		v := *s.ClusterName

		metadata := protocol.Metadata{}
		e.SetValue(protocol.PathTarget, "ClusterName", protocol.QuotedValue{ValueMarshaler: protocol.StringValue(v)}, metadata)
	}
	if s.Names != nil {
		v := *s.Names

		metadata := protocol.Metadata{}
		e.SetValue(protocol.QueryTarget, "names", protocol.QuotedValue{ValueMarshaler: protocol.StringValue(v)}, metadata)
	}
	return nil
}

type DeleteNodePoolsOutput struct {
	_ struct{} `type:"structure"`

	NodePools []NodePool `locationName:"nodePools" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DeleteNodePoolsOutput) String() string {
	return nifcloudutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s DeleteNodePoolsOutput) MarshalFields(e protocol.FieldEncoder) error {
	if s.NodePools != nil {
		v := s.NodePools

		metadata := protocol.Metadata{}
		ls0 := e.List(protocol.BodyTarget, "nodePools", metadata)
		ls0.Start()
		for _, v1 := range v {
			ls0.ListAddFields(v1)
		}
		ls0.End()

	}
	if s.RequestId != nil {
		v := *s.RequestId

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "requestId", protocol.QuotedValue{ValueMarshaler: protocol.StringValue(v)}, metadata)
	}
	return nil
}

const opDeleteNodePools = "DeleteNodePools"

// DeleteNodePoolsRequest returns a request value for making API operation for
// NIFCLOUD Hatoba beta.
//
//    // Example sending a request using DeleteNodePoolsRequest.
//    req := client.DeleteNodePoolsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/hatoba-2019-03-27/DeleteNodePools
func (c *Client) DeleteNodePoolsRequest(input *DeleteNodePoolsInput) DeleteNodePoolsRequest {
	op := &aws.Operation{
		Name:       opDeleteNodePools,
		HTTPMethod: "DELETE",
		HTTPPath:   "/v1/clusters/{ClusterName}/nodePools",
	}

	if input == nil {
		input = &DeleteNodePoolsInput{}
	}

	req := c.newRequest(op, input, &DeleteNodePoolsOutput{})
	return DeleteNodePoolsRequest{Request: req, Input: input, Copy: c.DeleteNodePoolsRequest}
}

// DeleteNodePoolsRequest is the request type for the
// DeleteNodePools API operation.
type DeleteNodePoolsRequest struct {
	*aws.Request
	Input *DeleteNodePoolsInput
	Copy  func(*DeleteNodePoolsInput) DeleteNodePoolsRequest
}

// Send marshals and sends the DeleteNodePools API request.
func (r DeleteNodePoolsRequest) Send(ctx context.Context) (*DeleteNodePoolsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DeleteNodePoolsResponse{
		DeleteNodePoolsOutput: r.Request.Data.(*DeleteNodePoolsOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DeleteNodePoolsResponse is the response type for the
// DeleteNodePools API operation.
type DeleteNodePoolsResponse struct {
	*DeleteNodePoolsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DeleteNodePools request.
func (r *DeleteNodePoolsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
