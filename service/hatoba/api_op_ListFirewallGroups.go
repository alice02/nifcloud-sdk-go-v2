// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package hatoba

import (
	"context"

	"github.com/alice02/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
)

type ListFirewallGroupsInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s ListFirewallGroupsInput) String() string {
	return nifcloudutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s ListFirewallGroupsInput) MarshalFields(e protocol.FieldEncoder) error {
	e.SetValue(protocol.HeaderTarget, "Content-Type", protocol.StringValue("application/json"), protocol.Metadata{})

	return nil
}

type ListFirewallGroupsOutput struct {
	_ struct{} `type:"structure"`

	FirewallGroups []FirewallGroupResponse `locationName:"firewallGroups" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s ListFirewallGroupsOutput) String() string {
	return nifcloudutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s ListFirewallGroupsOutput) MarshalFields(e protocol.FieldEncoder) error {
	if s.FirewallGroups != nil {
		v := s.FirewallGroups

		metadata := protocol.Metadata{}
		ls0 := e.List(protocol.BodyTarget, "firewallGroups", metadata)
		ls0.Start()
		for _, v1 := range v {
			ls0.ListAddFields(v1)
		}
		ls0.End()

	}
	if s.RequestId != nil {
		v := *s.RequestId

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "requestId", protocol.QuotedValue{ValueMarshaler: protocol.StringValue(v)}, metadata)
	}
	return nil
}

const opListFirewallGroups = "ListFirewallGroups"

// ListFirewallGroupsRequest returns a request value for making API operation for
// NIFCLOUD Hatoba beta.
//
//    // Example sending a request using ListFirewallGroupsRequest.
//    req := client.ListFirewallGroupsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/hatoba-2019-03-27/ListFirewallGroups
func (c *Client) ListFirewallGroupsRequest(input *ListFirewallGroupsInput) ListFirewallGroupsRequest {
	op := &aws.Operation{
		Name:       opListFirewallGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/v1/firewallGroups",
	}

	if input == nil {
		input = &ListFirewallGroupsInput{}
	}

	req := c.newRequest(op, input, &ListFirewallGroupsOutput{})
	return ListFirewallGroupsRequest{Request: req, Input: input, Copy: c.ListFirewallGroupsRequest}
}

// ListFirewallGroupsRequest is the request type for the
// ListFirewallGroups API operation.
type ListFirewallGroupsRequest struct {
	*aws.Request
	Input *ListFirewallGroupsInput
	Copy  func(*ListFirewallGroupsInput) ListFirewallGroupsRequest
}

// Send marshals and sends the ListFirewallGroups API request.
func (r ListFirewallGroupsRequest) Send(ctx context.Context) (*ListFirewallGroupsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListFirewallGroupsResponse{
		ListFirewallGroupsOutput: r.Request.Data.(*ListFirewallGroupsOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListFirewallGroupsResponse is the response type for the
// ListFirewallGroups API operation.
type ListFirewallGroupsResponse struct {
	*ListFirewallGroupsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListFirewallGroups request.
func (r *ListFirewallGroupsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
