// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type NiftyCreateNatRuleInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	Destination *RequestDestinationStruct `locationName:"Destination" type:"structure"`

	InboundInterface *RequestInboundInterfaceStruct `locationName:"InboundInterface" type:"structure"`

	NatTableId *string `locationName:"NatTableId" type:"string"`

	NatType *string `locationName:"NatType" type:"string"`

	OutboundInterface *RequestOutboundInterfaceStruct `locationName:"OutboundInterface" type:"structure"`

	Protocol *string `locationName:"Protocol" type:"string"`

	RuleNumber *string `locationName:"RuleNumber" type:"string"`

	Source *RequestSourceStruct `locationName:"Source" type:"structure"`

	Translation *RequestTranslationStruct `locationName:"Translation" type:"structure"`
}

// String returns the string representation
func (s NiftyCreateNatRuleInput) String() string {
	return nifcloudutil.Prettify(s)
}

type NiftyCreateNatRuleOutput struct {
	_ struct{} `type:"structure"`

	NatRule *NatRule `locationName:"natRule" type:"structure"`

	NatTableId *string `locationName:"natTableId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s NiftyCreateNatRuleOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyCreateNatRule = "NiftyCreateNatRule"

// NiftyCreateNatRuleRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyCreateNatRuleRequest.
//    req := client.NiftyCreateNatRuleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/NiftyCreateNatRule
func (c *Client) NiftyCreateNatRuleRequest(input *NiftyCreateNatRuleInput) NiftyCreateNatRuleRequest {
	op := &aws.Operation{
		Name:       opNiftyCreateNatRule,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateNatRuleInput{}
	}

	req := c.newRequest(op, input, &NiftyCreateNatRuleOutput{})
	return NiftyCreateNatRuleRequest{Request: req, Input: input, Copy: c.NiftyCreateNatRuleRequest}
}

// NiftyCreateNatRuleRequest is the request type for the
// NiftyCreateNatRule API operation.
type NiftyCreateNatRuleRequest struct {
	*aws.Request
	Input *NiftyCreateNatRuleInput
	Copy  func(*NiftyCreateNatRuleInput) NiftyCreateNatRuleRequest
}

// Send marshals and sends the NiftyCreateNatRule API request.
func (r NiftyCreateNatRuleRequest) Send(ctx context.Context) (*NiftyCreateNatRuleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyCreateNatRuleResponse{
		NiftyCreateNatRuleOutput: r.Request.Data.(*NiftyCreateNatRuleOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyCreateNatRuleResponse is the response type for the
// NiftyCreateNatRule API operation.
type NiftyCreateNatRuleResponse struct {
	*NiftyCreateNatRuleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyCreateNatRule request.
func (r *NiftyCreateNatRuleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
