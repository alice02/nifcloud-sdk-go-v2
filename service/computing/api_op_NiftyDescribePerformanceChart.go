// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type NiftyDescribePerformanceChartInput struct {
	_ struct{} `type:"structure"`

	DataType []string `locationName:"DataType" type:"list"`

	FromDate *string `locationName:"FromDate" type:"string"`

	FunctionName *string `locationName:"FunctionName" type:"string"`

	ResourceName []string `locationName:"ResourceName" type:"list"`

	ToDate *string `locationName:"ToDate" type:"string"`

	ValueType *string `locationName:"ValueType" type:"string"`
}

// String returns the string representation
func (s NiftyDescribePerformanceChartInput) String() string {
	return nifcloudutil.Prettify(s)
}

type NiftyDescribePerformanceChartOutput struct {
	_ struct{} `type:"structure"`

	FunctionName *string `locationName:"functionName" type:"string"`

	PerformanceChartSet []PerformanceChartSetItem `locationName:"performanceChartSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`

	ValueType *string `locationName:"valueType" type:"string"`
}

// String returns the string representation
func (s NiftyDescribePerformanceChartOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyDescribePerformanceChart = "NiftyDescribePerformanceChart"

// NiftyDescribePerformanceChartRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyDescribePerformanceChartRequest.
//    req := client.NiftyDescribePerformanceChartRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/NiftyDescribePerformanceChart
func (c *Client) NiftyDescribePerformanceChartRequest(input *NiftyDescribePerformanceChartInput) NiftyDescribePerformanceChartRequest {
	op := &aws.Operation{
		Name:       opNiftyDescribePerformanceChart,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribePerformanceChartInput{}
	}

	req := c.newRequest(op, input, &NiftyDescribePerformanceChartOutput{})
	return NiftyDescribePerformanceChartRequest{Request: req, Input: input, Copy: c.NiftyDescribePerformanceChartRequest}
}

// NiftyDescribePerformanceChartRequest is the request type for the
// NiftyDescribePerformanceChart API operation.
type NiftyDescribePerformanceChartRequest struct {
	*aws.Request
	Input *NiftyDescribePerformanceChartInput
	Copy  func(*NiftyDescribePerformanceChartInput) NiftyDescribePerformanceChartRequest
}

// Send marshals and sends the NiftyDescribePerformanceChart API request.
func (r NiftyDescribePerformanceChartRequest) Send(ctx context.Context) (*NiftyDescribePerformanceChartResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyDescribePerformanceChartResponse{
		NiftyDescribePerformanceChartOutput: r.Request.Data.(*NiftyDescribePerformanceChartOutput),
		response:                            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyDescribePerformanceChartResponse is the response type for the
// NiftyDescribePerformanceChart API operation.
type NiftyDescribePerformanceChartResponse struct {
	*NiftyDescribePerformanceChartOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyDescribePerformanceChart request.
func (r *NiftyDescribePerformanceChartResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
