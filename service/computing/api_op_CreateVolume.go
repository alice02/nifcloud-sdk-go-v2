// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"
	"time"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type CreateVolumeInput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"AccountingType" type:"string"`

	Description *string `locationName:"Description" type:"string"`

	DiskType *string `locationName:"DiskType" type:"string"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	Size *int64 `locationName:"Size" type:"integer"`

	VolumeId *string `locationName:"VolumeId" type:"string"`
}

// String returns the string representation
func (s CreateVolumeInput) String() string {
	return nifcloudutil.Prettify(s)
}

type CreateVolumeOutput struct {
	_ struct{} `type:"structure"`

	AccountingType *string `locationName:"accountingType" type:"string"`

	AvailabilityZone *string `locationName:"availabilityZone" type:"string"`

	CreateTime *time.Time `locationName:"createTime" type:"timestamp"`

	DiskType *string `locationName:"diskType" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	Size *string `locationName:"size" type:"string"`

	SnapshotId *string `locationName:"snapshotId" type:"string"`

	Status *string `locationName:"status" type:"string"`

	VolumeId *string `locationName:"volumeId" type:"string"`
}

// String returns the string representation
func (s CreateVolumeOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opCreateVolume = "CreateVolume"

// CreateVolumeRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using CreateVolumeRequest.
//    req := client.CreateVolumeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/CreateVolume
func (c *Client) CreateVolumeRequest(input *CreateVolumeInput) CreateVolumeRequest {
	op := &aws.Operation{
		Name:       opCreateVolume,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateVolumeInput{}
	}

	req := c.newRequest(op, input, &CreateVolumeOutput{})
	return CreateVolumeRequest{Request: req, Input: input, Copy: c.CreateVolumeRequest}
}

// CreateVolumeRequest is the request type for the
// CreateVolume API operation.
type CreateVolumeRequest struct {
	*aws.Request
	Input *CreateVolumeInput
	Copy  func(*CreateVolumeInput) CreateVolumeRequest
}

// Send marshals and sends the CreateVolume API request.
func (r CreateVolumeRequest) Send(ctx context.Context) (*CreateVolumeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateVolumeResponse{
		CreateVolumeOutput: r.Request.Data.(*CreateVolumeOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateVolumeResponse is the response type for the
// CreateVolume API operation.
type CreateVolumeResponse struct {
	*CreateVolumeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateVolume request.
func (r *CreateVolumeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
