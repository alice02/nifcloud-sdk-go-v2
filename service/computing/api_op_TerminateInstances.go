// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/alice02/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type TerminateInstancesInput struct {
	_ struct{} `type:"structure"`

	InstanceId []string `locationName:"InstanceId" type:"list"`
}

// String returns the string representation
func (s TerminateInstancesInput) String() string {
	return nifcloudutil.Prettify(s)
}

type TerminateInstancesOutput struct {
	_ struct{} `type:"structure"`

	InstancesSet []InstancesSetItem `locationName:"instancesSet" locationNameList:"item" type:"list"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s TerminateInstancesOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opTerminateInstances = "TerminateInstances"

// TerminateInstancesRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using TerminateInstancesRequest.
//    req := client.TerminateInstancesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/TerminateInstances
func (c *Client) TerminateInstancesRequest(input *TerminateInstancesInput) TerminateInstancesRequest {
	op := &aws.Operation{
		Name:       opTerminateInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &TerminateInstancesInput{}
	}

	req := c.newRequest(op, input, &TerminateInstancesOutput{})
	return TerminateInstancesRequest{Request: req, Input: input, Copy: c.TerminateInstancesRequest}
}

// TerminateInstancesRequest is the request type for the
// TerminateInstances API operation.
type TerminateInstancesRequest struct {
	*aws.Request
	Input *TerminateInstancesInput
	Copy  func(*TerminateInstancesInput) TerminateInstancesRequest
}

// Send marshals and sends the TerminateInstances API request.
func (r TerminateInstancesRequest) Send(ctx context.Context) (*TerminateInstancesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &TerminateInstancesResponse{
		TerminateInstancesOutput: r.Request.Data.(*TerminateInstancesOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// TerminateInstancesResponse is the response type for the
// TerminateInstances API operation.
type TerminateInstancesResponse struct {
	*TerminateInstancesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// TerminateInstances request.
func (r *TerminateInstancesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
