// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type AttachNetworkInterfaceInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	InstanceUniqueId *string `locationName:"InstanceUniqueId" type:"string"`

	NetworkInterfaceId *string `locationName:"NetworkInterfaceId" type:"string"`

	NiftyReboot *string `locationName:"NiftyReboot" type:"string"`
}

// String returns the string representation
func (s AttachNetworkInterfaceInput) String() string {
	return nifcloudutil.Prettify(s)
}

type AttachNetworkInterfaceOutput struct {
	_ struct{} `type:"structure"`

	AttachmentId *string `locationName:"attachmentId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s AttachNetworkInterfaceOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opAttachNetworkInterface = "AttachNetworkInterface"

// AttachNetworkInterfaceRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using AttachNetworkInterfaceRequest.
//    req := client.AttachNetworkInterfaceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/AttachNetworkInterface
func (c *Client) AttachNetworkInterfaceRequest(input *AttachNetworkInterfaceInput) AttachNetworkInterfaceRequest {
	op := &aws.Operation{
		Name:       opAttachNetworkInterface,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AttachNetworkInterfaceInput{}
	}

	req := c.newRequest(op, input, &AttachNetworkInterfaceOutput{})
	return AttachNetworkInterfaceRequest{Request: req, Input: input, Copy: c.AttachNetworkInterfaceRequest}
}

// AttachNetworkInterfaceRequest is the request type for the
// AttachNetworkInterface API operation.
type AttachNetworkInterfaceRequest struct {
	*aws.Request
	Input *AttachNetworkInterfaceInput
	Copy  func(*AttachNetworkInterfaceInput) AttachNetworkInterfaceRequest
}

// Send marshals and sends the AttachNetworkInterface API request.
func (r AttachNetworkInterfaceRequest) Send(ctx context.Context) (*AttachNetworkInterfaceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AttachNetworkInterfaceResponse{
		AttachNetworkInterfaceOutput: r.Request.Data.(*AttachNetworkInterfaceOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AttachNetworkInterfaceResponse is the response type for the
// AttachNetworkInterface API operation.
type AttachNetworkInterfaceResponse struct {
	*AttachNetworkInterfaceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AttachNetworkInterface request.
func (r *AttachNetworkInterfaceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
