// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/alice02/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type NiftyUpdateElasticLoadBalancerInput struct {
	_ struct{} `type:"structure"`

	AccountingTypeUpdate *int64 `locationName:"AccountingTypeUpdate" type:"integer"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	ElasticLoadBalancerNameUpdate *string `locationName:"ElasticLoadBalancerNameUpdate" type:"string"`

	NetworkVolumeUpdate *int64 `locationName:"NetworkVolumeUpdate" type:"integer"`
}

// String returns the string representation
func (s NiftyUpdateElasticLoadBalancerInput) String() string {
	return nifcloudutil.Prettify(s)
}

type NiftyUpdateElasticLoadBalancerOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyUpdateElasticLoadBalancerOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyUpdateElasticLoadBalancer = "NiftyUpdateElasticLoadBalancer"

// NiftyUpdateElasticLoadBalancerRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyUpdateElasticLoadBalancerRequest.
//    req := client.NiftyUpdateElasticLoadBalancerRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/NiftyUpdateElasticLoadBalancer
func (c *Client) NiftyUpdateElasticLoadBalancerRequest(input *NiftyUpdateElasticLoadBalancerInput) NiftyUpdateElasticLoadBalancerRequest {
	op := &aws.Operation{
		Name:       opNiftyUpdateElasticLoadBalancer,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateElasticLoadBalancerInput{}
	}

	req := c.newRequest(op, input, &NiftyUpdateElasticLoadBalancerOutput{})
	return NiftyUpdateElasticLoadBalancerRequest{Request: req, Input: input, Copy: c.NiftyUpdateElasticLoadBalancerRequest}
}

// NiftyUpdateElasticLoadBalancerRequest is the request type for the
// NiftyUpdateElasticLoadBalancer API operation.
type NiftyUpdateElasticLoadBalancerRequest struct {
	*aws.Request
	Input *NiftyUpdateElasticLoadBalancerInput
	Copy  func(*NiftyUpdateElasticLoadBalancerInput) NiftyUpdateElasticLoadBalancerRequest
}

// Send marshals and sends the NiftyUpdateElasticLoadBalancer API request.
func (r NiftyUpdateElasticLoadBalancerRequest) Send(ctx context.Context) (*NiftyUpdateElasticLoadBalancerResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyUpdateElasticLoadBalancerResponse{
		NiftyUpdateElasticLoadBalancerOutput: r.Request.Data.(*NiftyUpdateElasticLoadBalancerOutput),
		response:                             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyUpdateElasticLoadBalancerResponse is the response type for the
// NiftyUpdateElasticLoadBalancer API operation.
type NiftyUpdateElasticLoadBalancerResponse struct {
	*NiftyUpdateElasticLoadBalancerOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyUpdateElasticLoadBalancer request.
func (r *NiftyUpdateElasticLoadBalancerResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
