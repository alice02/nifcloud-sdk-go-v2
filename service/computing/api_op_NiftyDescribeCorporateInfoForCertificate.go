// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/alice02/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type NiftyDescribeCorporateInfoForCertificateInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s NiftyDescribeCorporateInfoForCertificateInput) String() string {
	return nifcloudutil.Prettify(s)
}

type NiftyDescribeCorporateInfoForCertificateOutput struct {
	_ struct{} `type:"structure"`

	City *string `locationName:"city" type:"string"`

	CorpGrade *string `locationName:"corpGrade" type:"string"`

	CorpName *string `locationName:"corpName" type:"string"`

	DivisionName *string `locationName:"divisionName" type:"string"`

	KanaName1 *string `locationName:"kanaName1" type:"string"`

	KanaName2 *string `locationName:"kanaName2" type:"string"`

	Name1 *string `locationName:"name1" type:"string"`

	Name2 *string `locationName:"name2" type:"string"`

	PostName *string `locationName:"postName" type:"string"`

	Pref *string `locationName:"pref" type:"string"`

	PresidentName1 *string `locationName:"presidentName1" type:"string"`

	PresidentName2 *string `locationName:"presidentName2" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	TdbCode *string `locationName:"tdbCode" type:"string"`

	Zip1 *string `locationName:"zip1" type:"string"`

	Zip2 *string `locationName:"zip2" type:"string"`
}

// String returns the string representation
func (s NiftyDescribeCorporateInfoForCertificateOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyDescribeCorporateInfoForCertificate = "NiftyDescribeCorporateInfoForCertificate"

// NiftyDescribeCorporateInfoForCertificateRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyDescribeCorporateInfoForCertificateRequest.
//    req := client.NiftyDescribeCorporateInfoForCertificateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/NiftyDescribeCorporateInfoForCertificate
func (c *Client) NiftyDescribeCorporateInfoForCertificateRequest(input *NiftyDescribeCorporateInfoForCertificateInput) NiftyDescribeCorporateInfoForCertificateRequest {
	op := &aws.Operation{
		Name:       opNiftyDescribeCorporateInfoForCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeCorporateInfoForCertificateInput{}
	}

	req := c.newRequest(op, input, &NiftyDescribeCorporateInfoForCertificateOutput{})
	return NiftyDescribeCorporateInfoForCertificateRequest{Request: req, Input: input, Copy: c.NiftyDescribeCorporateInfoForCertificateRequest}
}

// NiftyDescribeCorporateInfoForCertificateRequest is the request type for the
// NiftyDescribeCorporateInfoForCertificate API operation.
type NiftyDescribeCorporateInfoForCertificateRequest struct {
	*aws.Request
	Input *NiftyDescribeCorporateInfoForCertificateInput
	Copy  func(*NiftyDescribeCorporateInfoForCertificateInput) NiftyDescribeCorporateInfoForCertificateRequest
}

// Send marshals and sends the NiftyDescribeCorporateInfoForCertificate API request.
func (r NiftyDescribeCorporateInfoForCertificateRequest) Send(ctx context.Context) (*NiftyDescribeCorporateInfoForCertificateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyDescribeCorporateInfoForCertificateResponse{
		NiftyDescribeCorporateInfoForCertificateOutput: r.Request.Data.(*NiftyDescribeCorporateInfoForCertificateOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyDescribeCorporateInfoForCertificateResponse is the response type for the
// NiftyDescribeCorporateInfoForCertificate API operation.
type NiftyDescribeCorporateInfoForCertificateResponse struct {
	*NiftyDescribeCorporateInfoForCertificateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyDescribeCorporateInfoForCertificate request.
func (r *NiftyDescribeCorporateInfoForCertificateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
