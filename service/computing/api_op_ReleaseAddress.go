// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type ReleaseAddressInput struct {
	_ struct{} `type:"structure"`

	PrivateIpAddress *string `locationName:"PrivateIpAddress" type:"string"`

	PublicIp *string `locationName:"PublicIp" type:"string"`
}

// String returns the string representation
func (s ReleaseAddressInput) String() string {
	return nifcloudutil.Prettify(s)
}

type ReleaseAddressOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s ReleaseAddressOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opReleaseAddress = "ReleaseAddress"

// ReleaseAddressRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using ReleaseAddressRequest.
//    req := client.ReleaseAddressRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/ReleaseAddress
func (c *Client) ReleaseAddressRequest(input *ReleaseAddressInput) ReleaseAddressRequest {
	op := &aws.Operation{
		Name:       opReleaseAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ReleaseAddressInput{}
	}

	req := c.newRequest(op, input, &ReleaseAddressOutput{})
	return ReleaseAddressRequest{Request: req, Input: input, Copy: c.ReleaseAddressRequest}
}

// ReleaseAddressRequest is the request type for the
// ReleaseAddress API operation.
type ReleaseAddressRequest struct {
	*aws.Request
	Input *ReleaseAddressInput
	Copy  func(*ReleaseAddressInput) ReleaseAddressRequest
}

// Send marshals and sends the ReleaseAddress API request.
func (r ReleaseAddressRequest) Send(ctx context.Context) (*ReleaseAddressResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ReleaseAddressResponse{
		ReleaseAddressOutput: r.Request.Data.(*ReleaseAddressOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ReleaseAddressResponse is the response type for the
// ReleaseAddress API operation.
type ReleaseAddressResponse struct {
	*ReleaseAddressOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ReleaseAddress request.
func (r *ReleaseAddressResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
