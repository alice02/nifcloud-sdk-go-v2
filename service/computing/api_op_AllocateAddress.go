// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type AllocateAddressInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	NiftyPrivateIp *bool `locationName:"NiftyPrivateIp" type:"boolean"`

	Placement *RequestPlacementStruct `locationName:"Placement" type:"structure"`
}

// String returns the string representation
func (s AllocateAddressInput) String() string {
	return nifcloudutil.Prettify(s)
}

type AllocateAddressOutput struct {
	_ struct{} `type:"structure"`

	AllocationId *string `locationName:"allocationId" type:"string"`

	Domain *string `locationName:"domain" type:"string"`

	Placement *Placement `locationName:"placement" type:"structure"`

	PrivateIpAddress *string `locationName:"privateIpAddress" type:"string"`

	PublicIp *string `locationName:"publicIp" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s AllocateAddressOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opAllocateAddress = "AllocateAddress"

// AllocateAddressRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using AllocateAddressRequest.
//    req := client.AllocateAddressRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/AllocateAddress
func (c *Client) AllocateAddressRequest(input *AllocateAddressInput) AllocateAddressRequest {
	op := &aws.Operation{
		Name:       opAllocateAddress,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AllocateAddressInput{}
	}

	req := c.newRequest(op, input, &AllocateAddressOutput{})
	return AllocateAddressRequest{Request: req, Input: input, Copy: c.AllocateAddressRequest}
}

// AllocateAddressRequest is the request type for the
// AllocateAddress API operation.
type AllocateAddressRequest struct {
	*aws.Request
	Input *AllocateAddressInput
	Copy  func(*AllocateAddressInput) AllocateAddressRequest
}

// Send marshals and sends the AllocateAddress API request.
func (r AllocateAddressRequest) Send(ctx context.Context) (*AllocateAddressResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AllocateAddressResponse{
		AllocateAddressOutput: r.Request.Data.(*AllocateAddressOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AllocateAddressResponse is the response type for the
// AllocateAddress API operation.
type AllocateAddressResponse struct {
	*AllocateAddressOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AllocateAddress request.
func (r *AllocateAddressResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
