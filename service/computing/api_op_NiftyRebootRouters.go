// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type NiftyRebootRoutersInput struct {
	_ struct{} `type:"structure"`

	Router []RequestRouterStruct `locationName:"Router" type:"list"`
}

// String returns the string representation
func (s NiftyRebootRoutersInput) String() string {
	return nifcloudutil.Prettify(s)
}

type NiftyRebootRoutersOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyRebootRoutersOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyRebootRouters = "NiftyRebootRouters"

// NiftyRebootRoutersRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyRebootRoutersRequest.
//    req := client.NiftyRebootRoutersRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/NiftyRebootRouters
func (c *Client) NiftyRebootRoutersRequest(input *NiftyRebootRoutersInput) NiftyRebootRoutersRequest {
	op := &aws.Operation{
		Name:       opNiftyRebootRouters,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRebootRoutersInput{}
	}

	req := c.newRequest(op, input, &NiftyRebootRoutersOutput{})
	return NiftyRebootRoutersRequest{Request: req, Input: input, Copy: c.NiftyRebootRoutersRequest}
}

// NiftyRebootRoutersRequest is the request type for the
// NiftyRebootRouters API operation.
type NiftyRebootRoutersRequest struct {
	*aws.Request
	Input *NiftyRebootRoutersInput
	Copy  func(*NiftyRebootRoutersInput) NiftyRebootRoutersRequest
}

// Send marshals and sends the NiftyRebootRouters API request.
func (r NiftyRebootRoutersRequest) Send(ctx context.Context) (*NiftyRebootRoutersResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyRebootRoutersResponse{
		NiftyRebootRoutersOutput: r.Request.Data.(*NiftyRebootRoutersOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyRebootRoutersResponse is the response type for the
// NiftyRebootRouters API operation.
type NiftyRebootRoutersResponse struct {
	*NiftyRebootRoutersOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyRebootRouters request.
func (r *NiftyRebootRoutersResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
