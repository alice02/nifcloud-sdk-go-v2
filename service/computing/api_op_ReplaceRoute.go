// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aokumasan/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type ReplaceRouteInput struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `locationName:"DestinationCidrBlock" type:"string"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	NetworkId *string `locationName:"NetworkId" type:"string"`

	NetworkName *string `locationName:"NetworkName" type:"string"`

	RouteTableId *string `locationName:"RouteTableId" type:"string"`
}

// String returns the string representation
func (s ReplaceRouteInput) String() string {
	return nifcloudutil.Prettify(s)
}

type ReplaceRouteOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s ReplaceRouteOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opReplaceRoute = "ReplaceRoute"

// ReplaceRouteRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using ReplaceRouteRequest.
//    req := client.ReplaceRouteRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/ReplaceRoute
func (c *Client) ReplaceRouteRequest(input *ReplaceRouteInput) ReplaceRouteRequest {
	op := &aws.Operation{
		Name:       opReplaceRoute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &ReplaceRouteInput{}
	}

	req := c.newRequest(op, input, &ReplaceRouteOutput{})
	return ReplaceRouteRequest{Request: req, Input: input, Copy: c.ReplaceRouteRequest}
}

// ReplaceRouteRequest is the request type for the
// ReplaceRoute API operation.
type ReplaceRouteRequest struct {
	*aws.Request
	Input *ReplaceRouteInput
	Copy  func(*ReplaceRouteInput) ReplaceRouteRequest
}

// Send marshals and sends the ReplaceRoute API request.
func (r ReplaceRouteRequest) Send(ctx context.Context) (*ReplaceRouteResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ReplaceRouteResponse{
		ReplaceRouteOutput: r.Request.Data.(*ReplaceRouteOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ReplaceRouteResponse is the response type for the
// ReplaceRoute API operation.
type ReplaceRouteResponse struct {
	*ReplaceRouteOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ReplaceRoute request.
func (r *ReplaceRouteResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
