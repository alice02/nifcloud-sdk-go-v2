// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/alice02/nifcloud-sdk-go-v2/internal/nifcloudutil"
	"github.com/aws/aws-sdk-go-v2/aws"
)

type UploadSslCertificateInput struct {
	_ struct{} `type:"structure"`

	Certificate *string `locationName:"Certificate" type:"string"`

	CertificateAuthority *string `locationName:"Ca" type:"string"`

	Key *string `locationName:"Key" type:"string"`
}

// String returns the string representation
func (s UploadSslCertificateInput) String() string {
	return nifcloudutil.Prettify(s)
}

type UploadSslCertificateOutput struct {
	_ struct{} `type:"structure"`

	Fqdn *string `locationName:"fqdn" type:"string"`

	FqdnId *string `locationName:"fqdnId" type:"string"`

	KeyFingerPrint *string `locationName:"keyFingerPrint" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s UploadSslCertificateOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opUploadSslCertificate = "UploadSslCertificate"

// UploadSslCertificateRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using UploadSslCertificateRequest.
//    req := client.UploadSslCertificateRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/computing-2016-11-15/UploadSslCertificate
func (c *Client) UploadSslCertificateRequest(input *UploadSslCertificateInput) UploadSslCertificateRequest {
	op := &aws.Operation{
		Name:       opUploadSslCertificate,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &UploadSslCertificateInput{}
	}

	req := c.newRequest(op, input, &UploadSslCertificateOutput{})
	return UploadSslCertificateRequest{Request: req, Input: input, Copy: c.UploadSslCertificateRequest}
}

// UploadSslCertificateRequest is the request type for the
// UploadSslCertificate API operation.
type UploadSslCertificateRequest struct {
	*aws.Request
	Input *UploadSslCertificateInput
	Copy  func(*UploadSslCertificateInput) UploadSslCertificateRequest
}

// Send marshals and sends the UploadSslCertificate API request.
func (r UploadSslCertificateRequest) Send(ctx context.Context) (*UploadSslCertificateResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &UploadSslCertificateResponse{
		UploadSslCertificateOutput: r.Request.Data.(*UploadSslCertificateOutput),
		response:                   &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// UploadSslCertificateResponse is the response type for the
// UploadSslCertificate API operation.
type UploadSslCertificateResponse struct {
	*UploadSslCertificateOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// UploadSslCertificate request.
func (r *UploadSslCertificateResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
